@model FormBuilder.Model.FBForm
@using FormBuilder.Utilities
@using System.Text;
@{
    Layout = "~/Areas/FormBuilder/Views/Layout/BaseListContainer.cshtml";
    ViewBag.Title = "";
}
<style>
    body {
        padding: 1px;
        overflow: hidden;
    }

    .noborder {
        border: none !important;
    }

    .lee-layout-header {
        /*background: #FFF;*/
    }

    .lee-grid .lee-grid-header, .lee-grid .lee-grid-hd-cell {
        background: #FFF;
    }

    .lee-layout-center {
        border: 0;
    }

    .lee-toolbar {
        border-bottom: 1px solid #DDD !important;
    }

    .lee-table-form-border textarea:read-only, .lee-table-form-border textarea:disabled {
        background: #fbfbfb;
    }

    .lee-input:read-only, .lee-input:disabled {
        background: #fbfbfb;
    }

    input.n-invalid, textarea.n-invalid {
        border: 1px solid #f04134 !important;
    }

    .lee-text-required input {
        background: #faffbd;
    }

    input.required, .textarea.required {
        background: #faffbd;
    }

    .lee-layout-center .lee-layout-content {
        overflow: auto;
    }

    .lee-tab-links {
        overflow: hidden;
    }

    .lee-auto-grid {
        padding-bottom: 1px;
    }

    .lee-radiolist-table .lee-radio-wrapper, .lee-radiolist-table label {
        font-size: 12px;
        margin-left: 2px;
    }

    .lee-hidden {
        display: none !important;
    }

    .lee-radiolist-table .msg-box .msg-wrap {
        margin-bottom: 19px;
    }

    .fix-bottom {
        height: 40px;
    }

    .fix-bottom .lee-toolbar {
        border-top: 1px solid #DDD !important;
        border-bottom: 0 !important;
        background: #Fcfcfc;
        box-shadow: 0 1px 6px rgba(99, 99, 99, 0.3);
    }
</style>
@*输出页面布局信息*@
<form id="form">
    <div id="page">
        @Html.Raw(BASE64.DeCode(Model.HtmlInfo))
    </div>
</form>




@*输出上下文配置信息*@

@section ExternalScripts{
    <link href="~/CSS/runtime.css" rel="stylesheet" />
    @*核心脚本*@
    <script src="~/Scripts/Runtime/core.js"></script>
    @*工具类*@
    <script src="~/Scripts/Runtime/utils.js"></script>
    @*状态机*@
    <script src="~/Scripts/Runtime/fsm.js"></script>
    @*上下文身份*@
    <script src="~/Scripts/Runtime/context.js"></script>
    @*表达式*@
    <script src="~/Scripts/Runtime/Express/parser.js"></script>
    <script src="~/Scripts/Runtime/Express/calc.js"></script>

    @*校验*@
    <script src="~/Scripts/Runtime/validate.js"></script>
    @*数据模型*@
    <script src="~/Scripts/Runtime/model.js"></script>
    @*数据请求API*@
    <script src="~/Scripts/Runtime/service.js"></script>
    @*UI控制器*@
    <script src="~/Scripts/Runtime/ui.js"></script>
    <script src="~/Scripts/Runtime/Controller/card.js"></script>



    @Html.Raw("<script> Page.Context.set(" + Newtonsoft.Json.JsonConvert.SerializeObject(SessionProvider.Provider.Current()) + ")</script>")


    <script>
        @Html.Raw(Model.UserJS)
    </script>
    <style>
    @Model.CSSInfo
    </style>

}

@{
    if (HttpContext.Current.Request.QueryString.Get("cache") == "1")
    {
        var filePath = Server.MapPath("~/Scripts/Static/" + Model.ID + ".js");//获取想创建文件的物理路径
        if (!System.IO.File.Exists(filePath))
        {

            StringBuilder sb = new StringBuilder();
            FileStream fs1 = new FileStream(filePath, FileMode.Create, FileAccess.Write);//创建写入文件
            StreamWriter sw = new StreamWriter(fs1);
            sb.Append("var formConfig=");
            sb.Append(Model.Config + ";");

            sb.Append("var pageConfig=");
            sb.Append(BASE64.DeCode(Model.JSInfo) + ";");

            sb.Append("var toolbarConfig=");
            sb.Append(Model.ToolBarConfig + ";");

            sb.Append("var modelSchema=");
            sb.Append(Model.SchemaInfo + ";");

            sb.Append("var modelID=\"");
            sb.Append(Model.ModelID + "\";");

            sb.Append("var defaultValue=");
            sb.Append((Model.DefaultInfo == null ? "{}" : Model.DefaultInfo) + ";");


            sb.Append("var dsSchema=");
            sb.Append((Model.dsSchema == null ? "{}" : Model.dsSchema) + ";");


            sb.Append("var expressInfo=");
            sb.Append((Model.ExpressInfo == null ? "{}" : Model.ExpressInfo) + ";");

            sw.Write(sb.ToString());//开始写入值
            sw.Close();
            fs1.Close();
        }
        @Html.Raw(" <script src=\"/FormBuilder.Web/Scripts/Static/" + Model.ID + ".js\"></script>")
    }
    else
    {
        @Html.Raw("<script>var formConfig=" + Model.Config + "</script>")
        @Html.Raw("<script>var pageConfig=" + BASE64.DeCode(Model.JSInfo) + "</script>")
        @Html.Raw("<script>var toolbarConfig=" + Model.ToolBarConfig + "</script>")
        @Html.Raw("<script>var modelSchema=" + Model.SchemaInfo + "</script>")
        @Html.Raw("<script>var modelID=\"" + Model.ModelID + "\"</script>")
        @Html.Raw("<script>var defaultValue=" + (Model.DefaultInfo == null ? "{}" : Model.DefaultInfo) + ";</script>")
        @Html.Raw("<script>var dsSchema=" + (Model.dsSchema == null ? "{}" : Model.dsSchema) + ";</script>")
        @Html.Raw("<script>var expressInfo=" + (Model.ExpressInfo == null ? "{}" : Model.ExpressInfo) + ";</script>")
    }
}
@*输入界面配置信息*@


<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <!--添加自定义节点：log4net type：解析类名，程序集名(log4net.dll)-->
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>

  <log4net>
    <logger name="exceptionLogger">
      <level value="INFO"/>
      <appender-ref ref="AdoNetAppender_MySql"/>
    </logger>

    <logger name="auditLogger">
      <level value="INFO"/>
      <appender-ref ref="AuditAppender_MySql"/>
    </logger>

    <logger name="debugLogger">
      <level value="INFO"/>
      <appender-ref ref="DebugAppender_Text"/>
    </logger>

    <!--异常日志-->
    <appender name="AdoNetAppender_MySql" type="log4net.Appender.AdoNetAppender">
      <!-- BufferSize 为缓冲区大小，只有日志记录超5 条才会一块写入到数据库 -->
      <!-- 或写为<param name="BufferSize" value="10" /> -->
      <bufferSize value="1"/>
      <!-- 引用 -->
      <!--数据库类型配置-->
      <param name="ConnectionType" value="MySql.Data.MySqlClient.MySqlConnection, MySql.Data"/>

      <!-- 连接数据库字符串 -->
      <param name="ConnectionString" value="server=192.168.1.103;database=logstorage;Uid=dbuser;Pwd=aaaaaa;"/>
      <!-- 插入到表Log 
      <commandText value="INSERT INTO LBFExceptionLogs (RecordTime,ExceptionCode,ExceptionLevel,UserCode,FuncName,ModuleName,HappenTime,ExceptionMessage,ExceptionDetail,IsBusiness) 
                   VALUES (@log_date, @ExceptionCode,@ExceptionLevel,@UserCode,@FuncName,@ModuleName,@HappenTime,@ExceptionMessage,@ExceptionDetail,@IsBusiness)"/>-->

     <param name="CommandType" value="StoredProcedure" />
      <commandText value="prc_LBFExceptionLog"/>

      <!-- 日志记录时间log4net，RawTimeStampLayout 为默认的时间输出格式 -->
      <parameter>
        <parameterName value = "@log_date"/>
        <dbType value = "DateTime"/>
        <layout type = "log4net.Layout.RawTimeStampLayout"/>
        <!-- /这里呢是获取log4net 中提供的日志时间 -->
      </parameter>

      <!-- 异常级别log4net -->
      <parameter>
        <parameterName value="@log_level"/>
        <dbType value="String"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level"/>
        </layout>
      </parameter>

      <!-- 异常编号 -->
      <parameter>
        <parameterName value = "@ExceptionCode"/>
        <dbType value = "String"/>
        <size value = "36"/>
        <layout type = "Com.FrameworkCore.Service.Log.CustomLayout">
          <!-- 当用到property 时，就表明这是用户自定义的字段属性，是log4net 中所没有提供的字段。 -->
          <conversionPattern value = "%property{ExceptionCode}"/>
        </layout>
      </parameter>

      <!-- 异常级别 -->
      <parameter>
        <parameterName value = "@ExceptionLevel"/>
        <dbType value = "Int32"/>
        <layout type = "Com.FrameworkCore.Service.Log.CustomLayout">
          <conversionPattern value = "%property{ExceptionLevel} "/>
        </layout>
      </parameter>

      <!-- 用户名称 -->
      <parameter>
        <parameterName value = "@UserCode"/>
        <dbType value = "String"/>
        <size value = "64"/>
        <layout type = "Com.FrameworkCore.Service.Log.CustomLayout">
          <!-- 当用到property 时，就表明这是用户自定义的字段属性，是log4net 中所没有提供的字段。 -->
          <conversionPattern value = "%property{UserCode}"/>
        </layout>
      </parameter>

      <!-- 功能名称 -->
      <parameter>
        <parameterName value = "@FuncName"/>
        <dbType value = "String"/>
        <size value = "64"/>
        <layout type = "Com.FrameworkCore.Service.Log.CustomLayout">
          <conversionPattern value = "%property{FuncName} "/>
        </layout>
      </parameter>

      <!-- 模块名称 -->
      <parameter>
        <parameterName value = "@ModuleName"/>
        <dbType value = "String"/>
        <size value = "64"/>
        <layout type = "Com.FrameworkCore.Service.Log.CustomLayout">
          <!-- 当用到property 时，就表明这是用户自定义的字段属性，是log4net 中所没有提供的字段。 -->
          <conversionPattern value = "%property{ModuleName}"/>
        </layout>
      </parameter>

      <!-- 发生时间 -->
      <parameter>
        <parameterName value = "@HappenTime"/>
        <dbType value = "String"/>
        <layout type = "Com.FrameworkCore.Service.Log.CustomLayout">
          <conversionPattern value = "%property{HappenTime} "/>
        </layout>
      </parameter>

      <!-- 异常信息 -->
      <parameter>
        <parameterName value = "@ExceptionMessage"/>
        <dbType value = "String"/>
        <size value = "1000"/>
        <layout type = "Com.FrameworkCore.Service.Log.CustomLayout">
          <!-- 当用到property 时，就表明这是用户自定义的字段属性，是log4net 中所没有提供的字段。 -->
          <conversionPattern value = "%property{ExceptionMessage}"/>
        </layout>
      </parameter>

      <!-- 异常详细信息 -->
      <parameter>
        <parameterName value = "@ExceptionDetail"/>
        <dbType value = "String"/>
        <size value = "5000"/>
        <layout type = "Com.FrameworkCore.Service.Log.CustomLayout">
          <conversionPattern value = "%property{ExceptionDetail} "/>
        </layout>
      </parameter>

      <!-- 是否业务异常 -->
      <parameter>
        <parameterName value = "@IsBusiness"/>
        <dbType value = "Int32"/>
        <layout type = "Com.FrameworkCore.Service.Log.CustomLayout">
          <conversionPattern value = "%property{IsBusiness} "/>
        </layout>
      </parameter>

    </appender>

    <!--审计日志-->
    <appender name="AuditAppender_MySql" type="log4net.Appender.AdoNetAppender">
      <!-- BufferSize 为缓冲区大小，只有日志记录超5 条才会一块写入到数据库 -->
      <!-- 或写为<param name="BufferSize" value="10" /> -->
      <bufferSize value="1"/>
      <!-- 引用 -->
      <!--数据库类型配置-->
      <param name="ConnectionType" value="MySql.Data.MySqlClient.MySqlConnection, MySql.Data"/>

      <!-- 连接数据库字符串 -->
      <param name="ConnectionString" value="server=192.168.1.103;database=logstorage;Uid=dbuser;Pwd=aaaaaa;"/>
      <!-- 插入到表Log 
      <commandText value="INSERT INTO lbfauditlogs{HappenMonth} (Title,HappenTime,ModuleName,FuncName,User,LogMessage) 
                   VALUES (@Title,@HappenTime,@ModuleName,@FuncName,@User,@LogMessage)"/>-->

      <param name="CommandType" value="StoredProcedure" />
      <commandText value="prc_lbfauditlog"/>

      <!-- 发生时间 -->
      <parameter>
        <parameterName value = "@HappenTime"/>
        <dbType value = "String"/>
        <layout type = "Com.FrameworkCore.Service.Log.CustomLayout">
          <conversionPattern value = "%property{HappenTime} "/>
        </layout>
      </parameter>
      <!-- 审计标题 -->
      <parameter>
        <parameterName value = "@Title"/>
        <dbType value = "String"/>
        <size value = "36"/>
        <layout type = "Com.FrameworkCore.Service.Log.CustomLayout">
          <!-- 当用到property 时，就表明这是用户自定义的字段属性，是log4net 中所没有提供的字段。 -->
          <conversionPattern value = "%property{Title}"/>
        </layout>
      </parameter>

      <!-- 模块名称 -->
      <parameter>
        <parameterName value = "@ModuleName"/>
        <dbType value = "String"/>
        <size value = "36"/>
        <layout type = "Com.FrameworkCore.Service.Log.CustomLayout">
          <!-- 当用到property 时，就表明这是用户自定义的字段属性，是log4net 中所没有提供的字段。 -->
          <conversionPattern value = "%property{ModuleName}"/>
        </layout>
      </parameter>

      <!-- 功能名称 -->
      <parameter>
        <parameterName value = "@FuncName"/>
        <dbType value = "String"/>
        <size value = "36"/>
        <layout type = "Com.FrameworkCore.Service.Log.CustomLayout">
          <!-- 当用到property 时，就表明这是用户自定义的字段属性，是log4net 中所没有提供的字段。 -->
          <conversionPattern value = "%property{FuncName}"/>
        </layout>
      </parameter>

      <!-- 用户名称 -->
      <parameter>
        <parameterName value = "@User"/>
        <dbType value = "String"/>
        <size value = "36"/>
        <layout type = "Com.FrameworkCore.Service.Log.CustomLayout">
          <!-- 当用到property 时，就表明这是用户自定义的字段属性，是log4net 中所没有提供的字段。 -->
          <conversionPattern value = "%property{User}"/>
        </layout>
      </parameter>

      <!-- 审计信息 -->
      <parameter>
        <parameterName value = "@LogMessage"/>
        <dbType value = "String"/>
        <size value = "36"/>
        <layout type = "Com.FrameworkCore.Service.Log.CustomLayout">
          <!-- 当用到property 时，就表明这是用户自定义的字段属性，是log4net 中所没有提供的字段。 -->
          <conversionPattern value = "%property{LogMessage}"/>
        </layout>
      </parameter>

    </appender>

    <!--调试日志-->
    <appender name="DebugAppender_Text" type="log4net.Appender.RollingFileAppender">
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />

      <param name="File" value="Log\\Debug\\"/>
      <param name="AppendToFile" value="true"/>
      <param name="MaxFileSize" value="10240" />
      <param name="MaxSizeRollBackups" value="100"/>
      <param name="StaticLogFileName" value="false"/>
      <param name="DatePattern" value="yyyyMMdd&quot;.txt&quot;"/>
      <param name="RollingStyle" value="Date"/>
      <layout type="Com.FrameworkCore.Service.Log.CustomLayout">
        <param name="ConversionPattern" value="标题：%property{Title} 发生时间：%property{HappenTime} 模块名称：%property{ModuleName} 功能名称：%property{FuncName} 用户：%property{User}  日志信息：%property{LogMessage} 日志级别：%property{LogLevel} %newline%n%n" />
      </layout>
    </appender>

    <!--记录到文件-->
    <appender name="TextAppender" type="log4net.Appender.RollingFileAppender">
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />

      <param name="File" value="Log\\Text\\"/>
      <param name="AppendToFile" value="true"/>
      <param name="MaxFileSize" value="10240" />
      <param name="MaxSizeRollBackups" value="100"/>
      <param name="StaticLogFileName" value="false"/>
      <param name="DatePattern" value="yyyyMMdd&quot;.txt&quot;"/>
      <param name="RollingStyle" value="Date"/>
      <layout type="Com.FrameworkCore.Service.Log.CustomLayout">
        <param name="ConversionPattern" value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level 记录类：%logger 操作者ID：%property{UserCode} 模块名称：%property{ModuleName}%n 当前机器名及登录用户：%username %n               记录位置：%location%n 异常：%exception%n 消息：%message%newline%n%n" />
      </layout>
    </appender>

    <!--sql server数据库2-->
    <appender name="AdoNetAppender_SqlServer1" type="log4net.Appender.AdoNetAppender">
      <bufferSize value="0"/>
      <!--2.0这是对应sql2008 如是2000或2005另外配置-->
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=2.0.0.0, Culture=neutral,PublicKeyToken=b77a5c561934e089"/>

      <!-- 连接数据库字符串 -->
      <connectionString value="Data Source=.;Initial Catalog=Log;User ID=sa;Password=sa123;" />

      <!-- 插入到表Log -->
      <commandText value="INSERT INTO Log ([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message,@exception)"/>

      <parameter>
        <parameterName value="@log_date"/>
        <dbType value="DateTime"/>

        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%date{yyyy'-'MM'-'dd HH':'mm':'ss'.'fff}" />
        </layout>
        <!-- <layout type="log4net.Layout.RawTimeStampLayout"/>-->
      </parameter>
      <parameter>
        <parameterName value="@thread"/>
        <dbType value="String"/>
        <size value="255"/>
        <!-- LogComponent 是类所在的命名空间，MyLayout 是自定义属性所在的类，这是我们自己要写的部分，将在下面介绍。 -->
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_level"/>
        <dbType value="String"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logger"/>
        <dbType value="String"/>
        <size value="255"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@message"/>
        <dbType value="String"/>
        <size value="4000"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@exception" />
        <dbType value="String" />
        <size value="2000" />
        <layout type="log4net.Layout.ExceptionLayout" />
      </parameter>
    </appender>

    <!--sqlite数据库-->
    <appender name="AdoNetAppender_Sqllite" type="log4net.Appender.AdoNetAppender">
      <bufferSize value="0"/>
      <!--2.0这是对应sql2008 如是2000或2005另外配置-->
      <!--<connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=2.0.0.0, Culture=neutral,PublicKeyToken=b77a5c561934e089"/>-->
      <connectionType value="System.Data.SQLite.SQLiteConnection, System.Data.SQLite, Version=1.0.66.0, Culture=neutral, PublicKeyToken=db937bc2d44ff139" />
      <!-- 连接数据库字符串 -->
      <!--<connectionString value="Data Source=.;Initial Catalog=Log;User ID=sa;Password=123;" />-->
      <connectionString value="C:\\Users\\Administrator\\Desktop\\log4net\\Log4netExpand\\Test.db3;" />
      <!-- 插入到表Log -->
      <commandText value="INSERT INTO MAIN.[Log] ([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message,@exception)"/>

      <parameter>
        <parameterName value="@log_date"/>
        <dbType value="DateTime"/>

        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%date{yyyy'-'MM'-'dd HH':'mm':'ss'.'fff}" />
        </layout>
        <!-- <layout type="log4net.Layout.RawTimeStampLayout"/>-->
      </parameter>
      <parameter>
        <parameterName value="@thread"/>
        <dbType value="String"/>
        <!--<size value="255"/>-->
        <!-- LogComponent 是类所在的命名空间，MyLayout 是自定义属性所在的类，这是我们自己要写的部分，将在下面介绍。 -->
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_level"/>
        <dbType value="String"/>
        <!--<size value="50"/>-->
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logger"/>
        <dbType value="String"/>
        <!--<size value="255"/>-->
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@message"/>
        <dbType value="String"/>
        <!--<size value="4000"/>-->
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@exception" />
        <dbType value="String" />
        <!--<size value="2000" />-->
        <layout type="log4net.Layout.ExceptionLayout" />
      </parameter>
    </appender>
  </log4net>
</configuration>